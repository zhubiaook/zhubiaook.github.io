<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Command on blog</title>
    <link>https://blog.zybz.fun/posts/linux/command/</link>
    <description>Recent content in Command on blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 03 Feb 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://blog.zybz.fun/posts/linux/command/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>lsof</title>
      <link>https://blog.zybz.fun/posts/linux/command/lsof/</link>
      <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/lsof/</guid>
      <description>命令格式  lsof [options] [name]
   options: 选项
  name: 文件
  注意点：
  通常多个选项直接是 or 关系，即同时显示多个选项匹配到的内容，要使用 and 关系，添加选项 -a
  -r TIME 不断执行lsof命令，间隔时间为TIME
  显示网络信息  -i [46][protocol][@hostname|hostaddr][:service|port]
   46
  4: IPv4
  6: IPv6
    protocol: TCP|UDP
  hostname|hostaddr: 主机名或地址
  :service|port: 端口或者/etc/services中定义的，比如http, ftp
  示例1： 列出所有TCP/UDP连接
lsof -i 示例2： 列出本地socket连接</description>
    </item>
    
    <item>
      <title>iftop</title>
      <link>https://blog.zybz.fun/posts/linux/command/iftop/</link>
      <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/iftop/</guid>
      <description>安装 yum -y install iftop 使用 启动
iftop 进入界面命令
进入界面后的命令 ------------------ h: 进入帮助命令 L: 显示流量柱状图 主机显示： t: TX流量 / RX流量 / 全部 n: 显示名称 / 不解析名称 s|d: 显示/隐藏源地址 | 显示/隐藏目的地址 端口显示： p: 显示所有端口 N: 显示端口名称 / 不显示端口名称，显示数字 s|d 显示/隐藏源端口 | 显示/隐藏目的端口 排序: 1/2/3: 按第1/2/3列排序 &amp;lt;: 按源地址名称排列 &amp;gt;: 按目的地址名称排列 o: 固定当前排列，不刷新 通用选项： P: 暂停刷新 h: 帮助 </description>
    </item>
    
    <item>
      <title>ethtool</title>
      <link>https://blog.zybz.fun/posts/linux/command/ethtool/</link>
      <pubDate>Wed, 09 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/ethtool/</guid>
      <description>查询和修改以太网卡的配置信息（网卡驱动层）
命令显示的信息来源于网卡驱动层，即TCP/IP协议的链路层
 语法 ethtool [OPTIONS] DEVNAME OPTIONS -a 查看网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。 -A 修改网卡中 接收模块RX、发送模块TX和Autonegotiate模块的状态：启动on 或 停用off。 -c display the Coalesce information of the specified ethernet card。 -C Change the Coalesce setting of the specified ethernet card。 -g Display the rx/tx ring parameter information of the specified ethernet card。 -G change the rx/tx ring setting of the specified ethernet card。 -i 显示网卡驱动的信息，如驱动的名称、版本等。 -d 显示register dump信息, 部分网卡驱动不支持该选项。 -e 显示EEPROM dump信息，部分网卡驱动不支持该选项。 -E 修改网卡EEPROM byte。 -k 显示网卡Offload参数的状态：on 或 off，包括rx-checksumming、tx-checksumming等。 -K 修改网卡Offload参数的状态。 -p 用于区别不同ethX对应网卡的物理位置，常用的方法是使网卡port上的led不断的闪；N指示了网卡闪的持续时间，以秒为单位。 -r 如果auto-negotiation模块的状态为on，则restarts auto-negotiation。 -S 显示NIC- and driver-specific 的统计参数，如网卡接收/发送的字节数、接收/发送的广播包个数等。 -t 让网卡执行自我检测，有两种模式：offline or online。 -s 修改网卡的部分配置，包括网卡速度、单工/全双工模式、mac地址等。 示例 ethtool devname ethtool -h|--help ethtool --version ethtool -a|--show-pause devname ethtool -A|--pause devname [autoneg on|off] [rx on|off] [tx on|off] ethtool -c|--show-coalesce devname ethtool -g|--show-ring devname ethtool -G|--set-ring devname [rx N] [rx-mini N] [rx-jumbo N] [tx N] ethtool -i|--driver devname ethtool -d|--register-dump devname [raw on|off] [hex on|off] [file name] ethtool -e|--eeprom-dump devname [raw on|off] [offset N] [length N] ethtool -E|--change-eeprom devname [magic N] [offset N] [length N] [value N] ethtool -k|--show-features|--show-offload devname ethtool -K|--features|--offload devname feature on|off .</description>
    </item>
    
    <item>
      <title>strace</title>
      <link>https://blog.zybz.fun/posts/linux/command/strace/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/strace/</guid>
      <description> strace 最简单的用法是，指定一个要执行的命令，命令结束后它也退出。在命令的执行过程中，strace会记录和解析命令进程的所有系统调用，和该进程收到的信号量。
 语法 strace [OPTIONS] COMMAND 示例 strace -o record.txt -f ls </description>
    </item>
    
    <item>
      <title>unshare</title>
      <link>https://blog.zybz.fun/posts/linux/command/unshare/</link>
      <pubDate>Tue, 08 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/unshare/</guid>
      <description>用于Linux Namespace，unshare 命令可以创建一个新的Namespace，然后执行指定的程序，并将新的进程加入到新创建的Namespace中。新的Namespace支持多少种隔离，由unshare选项决定
 语法 unshare [OPTIONS] COMMAND OPTIONS:
  -m, &amp;ndash;mount : CLONE_NEWNS
  -u, &amp;ndash;uts : CLONE_NEWUTS
  -i, &amp;ndash;ipc : CLONE_NEWIPC
  -n, &amp;ndash;net : CLONE_NEWNET
  -p, &amp;ndash;pid : CLONE_NEWPID
  -U, &amp;ndash;user : CLONE_NEWUSER
  -f, &amp;ndash;fork : 创建一个子进程执行COMMAND，而不是取代当前的进程
  -r, &amp;ndash;map-root-user : 必须有-U选项，新命名空间中的用户为root
  &amp;ndash;propagation slave|shared|private|unchanged : 挂载选项
  &amp;ndash;mount-proc : 新的Namespace中重新挂载proc，前提有-m选项。
  示例 创建一个各命名空间都隔离的Namespace，行Namespace执行bash程序</description>
    </item>
    
    <item>
      <title>tcpdump</title>
      <link>https://blog.zybz.fun/posts/linux/command/tcpdump/</link>
      <pubDate>Fri, 04 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/tcpdump/</guid>
      <description>语法 tcpdump [OPTION] [FILTER]  选项
 常规选项：
  -i INTERFACE： 指定网络设备
  -n 不进行域名解析，显示IP
  -nn 显示IP和端口
  -c N 抓包数量
  -P in|out|inout 指定抓的是流入还是流出包
  输出选项：
  -e 显示源，目的MAC地址
  -q 输出精简信息
  -X, -XX 输出包的头部数据
  -v, -vv, -vv 产生详细输出
  其他选项：
  -D 列出抓包接口，可用于-i 选项
  -F 从文件中读取过滤条件
  -w 将抓包数据输出到文件，而不是标准输出
  -r 从文件中读取数据</description>
    </item>
    
    <item>
      <title>ip</title>
      <link>https://blog.zybz.fun/posts/linux/command/ip/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/ip/</guid>
      <description>语法 ip [OPTIONS] OBJECT {COMMAND | help}  OBJECT
   link, l: 网络设备
  address, a: 网络协议（IP, IPv6）地址
  route, r: 路由表
  netns: net-namespace管理
  addrlabel, addrl: Label configuration for protocol address selection
  neighbour, n: ARP or NDISC cache entry.
  rule, ru: Rule in routing policy database
  tunnel, t: Tunnel over IP
   帮助
   ip help</description>
    </item>
    
    <item>
      <title>sysctl</title>
      <link>https://blog.zybz.fun/posts/linux/command/sysctl/</link>
      <pubDate>Tue, 01 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://blog.zybz.fun/posts/linux/command/sysctl/</guid>
      <description>sysctl 用来修改内核参数(/proc/sys/)
 语法 sysctl [OPTIONS] [variable[=value]] sysctl -p [FILE] 选项 -a, -A: 显示所有变量及值 -n: 只显示值 -w: 设置变量的值(临时) -p: 从指定的文件读取变量和值修改内核参数(永久)，默认从/etc/sysctl.conf读取 示例： 查看所有内核参数
sysctl -a 输出：
net.core.rmem_default = 212992 net.core.rmem_max = 212992 net.core.rps_sock_flow_entries = 0 net.core.somaxconn = 128 net.core.warnings = 1 net.core.wmem_default = 212992 net.core.wmem_max = 212992 net.core.xfrm_acq_expires = 30 net.core.xfrm_aevent_etime = 10 net.core.xfrm_aevent_rseqth = 2 net.core.xfrm_larval_drop = 1 net.ipv4.cipso_cache_bucket_size = 10 net.ipv4.cipso_cache_enable = 1 net.ipv4.cipso_rbm_optfmt = 0 net.ipv4.cipso_rbm_strictvalid = 1 net.</description>
    </item>
    
  </channel>
</rss>